// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(uuid())
  name              String
  email             String   @unique
  password          String
  isEmailVerified   Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  enable2FA         Boolean  @default(false)
  emailNotification Boolean  @default(true)
  twoFactorSecret   String?

  // Relations
  sessions          Session[]
  verificationCodes VerificationCode[]

  @@map("users")
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  userAgent String?
  expiredAt DateTime
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("sessions")
}

model VerificationCode {
  id        String   @id @default(uuid())
  userId    String
  code      String   @unique
  type      String
  expiresAt DateTime
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("verification_codes")
}
